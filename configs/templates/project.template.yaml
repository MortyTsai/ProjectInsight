# configs/templates/project.template.yaml
# ======================================================================
# ProjectInsight - 專案分析設定範本 (v0.5)
# ======================================================================
# 說明:
# 1. 將此檔案複製到 'configs/projects/' 目錄下，並為您的專案重新命名
#    (例如 'my_awesome_project.yaml')。
# 2. 在 'configs/workspace.yaml' 的 'active_projects' 列表中引用您的新檔名
#    以啟用此設定。
# ======================================================================

# --- 專案基礎設定 ---
# [必要] 要分析的目標專案的「根目錄」。
# ProjectInsight 將以此路徑為基準，生成檔案樹並收集所有原始碼。
#
# [!!] 路徑教學:
#   - 推薦使用絕對路徑 (例如 "D:/Projects/MyAwesomeProject")，以避免任何歧義。
#   - 也可以使用相對於本設定檔所在 'projects/' 目錄的相對路徑。
#   - 推薦使用正斜線 '/'，它在所有作業系統上都能正常工作。
target_project_path: "../../../MyAwesomeProject"

# [必要] 目標專案的根套件名稱。
# 這將作為過濾內部/外部依賴和呼叫的基準。
# ProjectInsight 會自動在 target_project_path 下尋找此套件
# (無論是在根目錄還是在 'src/' 目錄下)。
root_package_name: "my_awesome_package"

# --- 輸出設定 ---
# [可選] 生成報告與圖表的輸出目錄。
# 建議為每個專案設定獨立的輸出目錄以避免混亂。
# 路徑是相對於本設定檔所在的 'projects/' 目錄。
output_dir: "../../output/my_awesome_project"

# ======================================================================
# 分析類型與詳細設定
# ======================================================================

# --- 分析類型 ---
# [必要] 指定要在此專案上執行的所有分析類型。
# 這是一個列表，工具將會依序執行所有指定的分析，並將結果匯總到一份報告中。
#
# 可選值 (可組合使用):
# - "component_interaction": 產生高階組件互動圖。
# - "auto_concept_flow": 自動發現專案中的核心概念實例作為種子，並產生概念流動圖。
analysis_types:
  - "component_interaction"
  - "auto_concept_flow"

# --- (自動) 概念流動圖 ('auto_concept_flow') 的專屬設定 ---
# 僅在 analysis_types 列表中包含 'auto_concept_flow' 時生效。
auto_concept_flow:
  # [可選] 排除符合特定模式的 FQN，避免將不重要的全域變數視為種子。
  # 支援簡單的 '*' 萬用字元，例如 "*_LOGGER" 會排除所有以 "_LOGGER" 結尾的變數。
  exclude_patterns:
    - "*_LOGGER"
    - "*_VERSION"
    - "API_*"

# ======================================================================
# 報告內容設定
# ======================================================================
report_settings:
  # --- 檔案結構樹設定 ---
  tree_view:
    # [可選] 在生成檔案樹時要排除的目錄名稱 (支援 '*' 萬用字元)。
    exclude_dirs:
      - "__pycache__"
      - ".git"
      - ".vscode"
      - ".idea"
      - "venv"
      - ".venv"
      - "dist"
      - "build"
      - "output"
      - ".ruff_cache"
      - "*.egg-info"

  # --- 原始碼收集設定 ---
  source_code:
    # [可選] 要包含在報告中的原始碼檔案的副檔名。
    included_extensions:
      - ".py"
      - ".md"
      - ".yaml"
      - ".toml"
      - ".gitignore"
      - ".env.example"

# ======================================================================
# 視覺化設定 (PNG 圖片)
# ======================================================================
visualization:
  # --- 高階組件互動圖 ('component_interaction') 的專屬設定 ---
  component_interaction_graph:
    layout_engine: "dot"
    show_internal_calls: true
  # --- 概念流動圖 (手動/自動模式通用) 的專屬設定 ---
  concept_flow_graph:
    layout_engine: "dot"

# ======================================================================
# 架構定義 (可選)
# ======================================================================
architecture_layers:
  core:
    name: "核心層"
    color: "#FFDDC1"
  services:
    name: "服務層"
    color: "#D1FFC1"
  utils:
    name: "工具層"
    color: "#CCCCCC"